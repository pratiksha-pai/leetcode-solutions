{"id":492231748,"lang":"cpp","time":"1Â year","timestamp":1620833046,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/492231748/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"15.2 MB","code":"class NumMatrix {\npublic:\n    vector<vector<int> > sums;\n    NumMatrix(vector<vector<int>>& m) {\n        sums.resize(1 + size(m), vector<int>(1 + size(m[0])));        \n        for(int r = 1; r <= size(m); r++) \n            for(int c = 1; c <= size(m[0]); c++) \n                sums[r][c] += sums[r - 1][c] + sums[r][c - 1] - sums[r - 1][c - 1] + m[r - 1][c - 1];\n    }\n    \n    int sumRegion(int r1, int c1, int r2, int c2) {\n        return sums[r2 + 1][c2 + 1] - sums[r1][c2 + 1] - sums[r2 + 1][c1] + sums[r1][c1];\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"11111111111","title_slug":"range-sum-query-2d-immutable"}