{"id":462444462,"lang":"cpp","time":"1Â year, 3Â months","timestamp":1614665170,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/462444462/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head == NULL) return false;\n        if(head->next == NULL) return false;\n        ListNode* slow = head;\n        ListNode* fast = head;\n        while(slow!= NULL && fast!= NULL){\n            if(slow->next == NULL ) return false;\n            if(fast->next ==NULL) return false;\n            if(fast->next->next == NULL) return false;\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow == fast) return true;\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111","title_slug":"linked-list-cycle"}