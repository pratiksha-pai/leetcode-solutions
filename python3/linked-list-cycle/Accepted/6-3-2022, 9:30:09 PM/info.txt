{"id":713625030,"lang":"python3","time":"5 days, 17 hours","timestamp":1654272009,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/713625030/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"17.6 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n        if head == None:\n            return False\n        \n        slow_pointer = head\n        fast_pointer = head.next\n        \n        while(slow_pointer!=None and fast_pointer!=None):\n            if slow_pointer == fast_pointer:\n                return True\n            else:\n                slow_pointer = slow_pointer.next\n                fast_pointer = fast_pointer.next\n                if(fast_pointer!=None):\n                    fast_pointer=fast_pointer.next\n                else:\n                    return False\n                \n        \n        return False\n        ","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}