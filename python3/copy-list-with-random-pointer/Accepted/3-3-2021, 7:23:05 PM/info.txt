{"id":463040070,"lang":"cpp","time":"1 year, 3 months","timestamp":1614779585,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/463040070/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.1 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if(head == NULL ) return NULL;\n        \n        \n//         add temp nodes and add next pointer for new ll\n        Node* curr_old = head;\n        while(curr_old != NULL){\n            Node* temp_node = new Node(curr_old->val);\n            temp_node->next = curr_old->next;\n            curr_old->next = temp_node;\n            curr_old = curr_old->next->next; \n            \n        }\n        \n//         add random pointers for new ll\n        Node* curr;\n        curr = head;\n        while(curr != NULL && curr->next != NULL){\n            if(curr->random != NULL) curr->next->random = curr->random->next;\n            curr = curr->next->next;\n        }\n        \n//         remove links between old and new ll\n        curr = head;\n        Node* new_head = head->next;\n        while(curr != NULL && curr->next != NULL){\n            Node* temp = curr->next;\n            curr->next = curr->next->next;\n            if(temp->next != NULL) temp->next = temp->next->next;\n            else  temp->next = NULL;\n            curr = curr->next;\n        }\n        \n//         print to debug\n        curr = head;\n        while(curr != NULL){\n            cout<< \"curr->val \" << curr->val << \" (curr->next != NULL) \" << (curr->next != NULL) << \" (curr->random != NULL) \" << (curr->random != NULL) <<endl;\n            curr = curr->next;\n        }\n        return new_head;\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer"}