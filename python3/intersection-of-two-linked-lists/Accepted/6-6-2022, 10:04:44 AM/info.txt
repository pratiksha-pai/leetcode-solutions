{"id":715446887,"lang":"python3","time":"3 days, 5 hours","timestamp":1654490084,"status_display":"Accepted","runtime":"314 ms","url":"/submissions/detail/715446887/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.7 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:\n        len1 = 0\n        len2 = 0\n        len_diff = 0\n        \n        \n        tempA = headA\n        tempB = headB\n        \n        while(tempA!=None or tempB!=None):\n            if tempA!=None:\n                tempA=tempA.next\n                len1+=1\n            if tempB!=None:\n                tempB=tempB.next\n                len2+=1\n            \n        tempA = headA\n        tempB = headB\n        \n        if len1 > len2:\n            count = len1 - len2\n            while count!=0:\n                tempA=tempA.next\n                count-=1\n            \n        else:\n            count = len2 - len1\n            while count!=0:\n                tempB=tempB.next\n                count-=1\n        \n        \n        while(tempA!=tempB and tempA!=None and tempB!=None):\n            tempA=tempA.next\n            tempB=tempB.next\n        \n        if tempA==tempB:\n            return tempA\n        \n        return None","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}