{"id":463437095,"lang":"cpp","time":"1 year, 3 months","timestamp":1614857662,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/463437095/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        \n        int lengthA = 0;\n        int lengthB = 0;\n        ListNode* currA;\n        ListNode* currB;\n        \n        currA = headA;\n        while(currA!=NULL){\n            lengthA++; \n            currA = currA->next;\n        }\n        \n        currB = headB;\n        while(currB!=NULL){\n            lengthB++; \n            currB = currB->next;\n        }\n        \n        currA = headA;\n        currB = headB;\n        if(lengthA > lengthB){\n            int diff = lengthA - lengthB;\n            while(diff){\n                diff--;\n                currA = currA->next;\n            }\n        }else{\n            int diff = lengthB - lengthA;\n            while(diff){\n                diff--;\n                currB = currB->next;\n            }\n        }\n        \n        while(currA && currB && currA!=currB){\n            currA = currA->next;\n            currB = currB->next;\n        }\n        if(currA == currB){\n            return currA;\n        }\n        else return NULL;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}