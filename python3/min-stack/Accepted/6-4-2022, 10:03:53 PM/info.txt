{"id":714303487,"lang":"python3","time":"4 days, 17 hours","timestamp":1654360433,"status_display":"Accepted","runtime":"1558 ms","url":"/submissions/detail/714303487/","is_pending":"Not Pending","title":"Min Stack","memory":"18 MB","code":"class MinStack:\n    arr = []\n    \n    def __init__(self):\n        self.arr = []\n        \n    def push(self, val: int) -> None:\n        self.arr.append(val)\n        \n    def pop(self) -> None:\n        del self.arr[len(self.arr) - 1]\n\n    def top(self) -> int:\n        return self.arr[len(self.arr) - 1]\n        \n    def getMin(self) -> int:\n        temp =  [elem for elem in self.arr]\n        temp.sort()\n        return temp[0]\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}