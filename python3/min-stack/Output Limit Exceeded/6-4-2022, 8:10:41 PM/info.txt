{"id":714239978,"lang":"python3","time":"4 days, 19 hours","timestamp":1654353641,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/714239978/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack:\n    \n    temp_stack = []\n    \n    def __init__(self):\n        self.temp_stack = []\n        pass\n        \n    def push(self, val: int) -> None:\n        self.temp_stack.append(val)\n        \n    def pop(self) -> None:\n        if len(self.temp_stack) != 0:\n            del self.temp_stack[len(self.temp_stack)-1]\n            \n\n    def top(self) -> int:\n        return self.temp_stack[len(self.temp_stack)-1]\n        \n    def getMin(self) -> int:\n        # print(type(self.temp_stack))\n        # for i in range(len(self.temp_stack)):\n        #     print(self.temp_stack[i], end=\" \")\n        # print()\n        \n        # temp_stack2 = [elem for elem in self.temp_stack]\n        # temp_stack2.append(self.temp_stack.sort())\n        # temp_stack2 = temp_stack2.sort()\n        temp_stack2 = []\n        \n        for i in range(len(self.temp_stack)):\n            temp_stack2.append(self.temp_stack[i])\n            \n        print(type(temp_stack2))\n        temp_stack2.sort()\n        \n        for i in range(len(temp_stack2)):\n            print(temp_stack2[i], end=\" \")\n        print()\n        \n        \n        if len(temp_stack2) != 0:\n            return temp_stack2[0]\n        else:\n            return None\n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"1111111111111111110000000000000","title_slug":"min-stack"}