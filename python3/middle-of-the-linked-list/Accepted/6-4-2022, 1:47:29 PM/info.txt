{"id":714062715,"lang":"python3","time":"5 days, 1 hour","timestamp":1654330649,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/714062715/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"13.8 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        \n        if head == None:\n            return None\n        if head.next == None:\n            return head\n        \n        \n        slow_pointer = head\n        fast_pointer = head.next \n        \n        while(fast_pointer != None):\n            slow_pointer = slow_pointer.next\n            fast_pointer = fast_pointer.next \n            if fast_pointer == None:\n                return slow_pointer\n            fast_pointer = fast_pointer.next \n            if fast_pointer == None:\n                return slow_pointer\n            pass\n        \n        return slow_pointer\n            ","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list"}