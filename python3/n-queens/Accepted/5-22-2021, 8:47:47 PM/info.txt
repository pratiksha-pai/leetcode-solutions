{"id":496689325,"lang":"cpp","time":"1Â year","timestamp":1621696667,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/496689325/","is_pending":"Not Pending","title":"N-Queens","memory":"7.4 MB","code":"class Solution {\npublic:\n    vector<vector<string> > sols;\n    vector<vector<string>> solveNQueens(int n) {    \n        vector<string> board(n, string(n, '.'));  // creating an empty board\n        solve(board, 0);\n        return sols;\n    }\n    bool check(vector<string>& board, int row, int col) {\n        int n = size(board);\n        for(int i = 0; i < n; i++) {\n            if(board[i][col] == 'Q') return false; // checking if any queen already placed on same column previously\n            // checking all diagonals-\n            if(row - i >= 0 && col - i >= 0 && board[row - i][col - i] == 'Q') return false;\n            if(row - i >= 0 && col + i <  n && board[row - i][col + i] == 'Q') return false;\n            if(row + i <  n && col - i >= 0 && board[row + i][col - i] == 'Q') return false;\n            if(row + i <  n && col + i <  n && board[row + i][col + i] == 'Q') return false;\n        }\n        return true;\n    }\n    // Recursive solver - Tries all possible placement of queen for current row & recurses for next row\n    void solve(vector<string>& board, int row) {\n        // base condition. When we reach here, a valid placement combination has been formed. So insert it into ans\n        if(row == size(board)) { \n            sols.push_back(board);\n            return;\n        }            \n        // Try placing a queen on each column for a given row. Explore next row by placing Q at each valid column for the current row\n        for(int col = 0; col < size(board); col++) \n            if(check(board, row, col)) {\n                board[row][col] = 'Q';    // Queen placed on a valid cell\n                solve(board, row + 1);    // exploring next row\n                board[row][col] = '.';    // backtracking to get all possible solutions\n            }            \n    }\n};","compare_result":"111111111","title_slug":"n-queens"}