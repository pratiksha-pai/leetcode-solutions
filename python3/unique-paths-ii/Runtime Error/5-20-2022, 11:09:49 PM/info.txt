{"id":703569134,"lang":"python3","time":"2 weeks, 5 days","timestamp":1653068389,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/703569134/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        n = len(obstacleGrid[0])\n        visited = [[0 for i in range(n+1)] for j in range(n+1)] \n        \n        for i in range(n+1):\n            for j in range(n+1):\n                if i == 1 and j == 1:\n                    visited[i][j] = 1 if not obstacleGrid[0][0] == 1 else 0\n                else:\n                    if obstacleGrid[i-1][j-1]  == 1:\n                        visited[i][j] = 0\n                    else:\n                        visited[i][j] = visited[i-1][j] + visited[i][j-1]  \n                        \n        \n        print(visited[n][n])\n        return visited[n][n]\n                \n        \n        ","compare_result":"11111000000000000000000000000000000000000","title_slug":"unique-paths-ii"}