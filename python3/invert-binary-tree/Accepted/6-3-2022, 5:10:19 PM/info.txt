{"id":713494428,"lang":"python3","time":"5 days, 22 hours","timestamp":1654256419,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/713494428/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"14 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        if root == None:\n            return root\n\n        if root.left == None and root.right == None:\n            return root\n\n        if root.right != None:\n            root.right = self.invertTree(root.right)\n        if root.left != None:\n            root.left = self.invertTree(root.left)\n        \n        temp = root.left \n        root.left = root.right\n        root.right = temp\n        \n        return root \n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}