{"id":462515068,"lang":"cpp","time":"1 year, 3 months","timestamp":1614677523,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/462515068/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> right_side;\n        queue<TreeNode*> q1, q2;\n        if(root == NULL) return {};\n        q1.push(root);\n        while(!q1.empty() || !q2.empty()){\n            while(!q1.empty()){\n                TreeNode* temp = q1.front();\n                if(q1.size() == 1) right_side.push_back(temp->val);\n                q1.pop();\n                if(temp->left) q2.push(temp->left);\n                if(temp->right) q2.push(temp->right);\n            }\n            while(!q2.empty()){\n                TreeNode* temp = q2.front();\n                if(q2.size() == 1) right_side.push_back(temp->val);\n                q2.pop();\n                if(temp->left) q1.push(temp->left);\n                if(temp->right) q1.push(temp->right);\n            }\n        }\n        return right_side;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}