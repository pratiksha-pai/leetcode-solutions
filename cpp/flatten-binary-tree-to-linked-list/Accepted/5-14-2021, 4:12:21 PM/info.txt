{"id":493006767,"lang":"cpp","time":"1Â year","timestamp":1620988941,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/493006767/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if(root==NULL) return;\n        if(root->left == NULL && root->right==NULL) return;\n        if(root->right != NULL ) flatten (root->right);\n        if(root->left != NULL) flatten(root->left);\n        // if(left != NULL) root->right = left; root->left=NULL;\n        TreeNode* left = root->left;\n        TreeNode* right = root->right;\n        if(left!=NULL) root->left = NULL; root->right=left;\n        TreeNode* temp = root;\n        while(temp->right!=NULL) temp=temp->right;\n        temp->right=right;\n        \n        return;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}