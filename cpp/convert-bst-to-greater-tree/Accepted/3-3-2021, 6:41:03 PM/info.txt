{"id":463029301,"lang":"cpp","time":"1 year, 3 months","timestamp":1614777063,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/463029301/","is_pending":"Not Pending","title":"Convert BST to Greater Tree","memory":"33.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate: int sum = 0;\npublic:\n//     TreeNode* next_successor(TreeNode* root){\n//         if (root==NULL) return NULL;\n//         TreeNode* curr = root;\n//         while(curr && curr->left){\n//             curr = curr->left;\n//         }\n//         return curr;\n//     }\n//     void sum_all(TreeNode* root){\n//         if(root==NULL) return;\n//         if(root->right) {\n//             sum_all(root->right);\n//             TreeNode* temp = next_successor(root->right);\n//             if(temp!=NULL) root->val += temp->val;\n//         }\n//         if(root->left) {\n//             sum_all(root->left);\n//             TreeNode* temp = next_successor(root->left);\n//             root->left->val += root->val;\n            \n//         }\n//         return;\n//     }\n\n    TreeNode* convertBST(TreeNode* root) {\n        if(root ==NULL) return NULL;\n        \n        convertBST(root->right);\n        sum = sum + root->val;\n        root->val = sum;\n        convertBST(root->left);\n        \n        \n        \n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-bst-to-greater-tree"}