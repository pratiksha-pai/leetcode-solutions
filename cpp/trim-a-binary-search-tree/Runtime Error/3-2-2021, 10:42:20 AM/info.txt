{"id":462423196,"lang":"cpp","time":"1 year, 3 months","timestamp":1614661940,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/462423196/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        if(root == NULL ) return NULL;\n\n        if(root->val < low){\n            TreeNode* rchild = root->right;\n            delete(root);\n            return rchild;\n        }\n        else if(root->val > high){\n            TreeNode* lchild = root->left;\n            delete(root);\n            return lchild;\n        }else {\n            root->left = trimBST(root->left, low, high);\n            root->right = trimBST(root->right, low, high);\n        }\n        return root;\n    }\n};","compare_result":"111100000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"trim-a-binary-search-tree"}