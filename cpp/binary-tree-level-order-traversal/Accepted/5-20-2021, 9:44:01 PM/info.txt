{"id":495851005,"lang":"cpp","time":"1Â year","timestamp":1621527241,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/495851005/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void iterate_temp(vector<int> temp){\n        if(temp.size()==0) return;\n        for(int i=0; i<temp.size(); i++) cout<<temp[i]<<\" \";\n        cout<<endl;\n        return;\n    }\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        if (root==NULL) return {};\n        queue<TreeNode*> q1, q2;\n        q1.push(root);\n        vector<vector<int>> res;\n        vector<int> temp_vec;\n        while(!q1.empty() || !q2.empty()){\n            \n            while(!q1.empty()){\n                TreeNode* temp = q1.front();\n                q1.pop();\n                temp_vec.push_back(temp->val);\n                if(temp->left) q2.push(temp->left);\n                if(temp->right) q2.push(temp->right);\n            }\n            if(temp_vec.size() !=0) res.push_back(temp_vec);\n            temp_vec.clear();\n            while(!q2.empty()){\n                TreeNode* temp = q2.front();\n                q2.pop();\n                temp_vec.push_back(temp->val);\n                if(temp->left) q1.push(temp->left);\n                if(temp->right) q1.push(temp->right);\n            }\n            if(temp_vec.size() !=0) res.push_back(temp_vec);\n            temp_vec.clear();\n        }\n        \n        \n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}