{"id":475061067,"lang":"cpp","time":"1 year, 2 months","timestamp":1617272023,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/475061067/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"128.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        if(head ==NULL) return true;\n        if(head->next == NULL) return true;\n        ListNode* temp = head;\n        vector<int> vec;\n        while(temp!=NULL){\n            vec.push_back(temp->val);\n            temp  = temp->next;\n        }\n        int n = vec.size();\n        for(int i=0; i<n/2; i++){\n            if(vec[i] != vec[n-1-i]) return false;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}