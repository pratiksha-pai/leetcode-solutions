{"id":482034800,"lang":"cpp","time":"1 year, 1 month","timestamp":1618721529,"status_display":"Accepted","runtime":"796 ms","url":"/submissions/detail/482034800/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"155.6 MB","code":"class Solution {\npublic:\n    int numSubmatrixSumTarget(vector<vector<int>>& A, int target) {\n        int res = 0, m = size(A), n = size(A[0]);\n        for (int row = 0; row < m; row++)\n            for (int col = 1; col < n; col++)\n                A[row][col] += A[row][col - 1];\n        //         cursum, occurences\n        unordered_map<int, int> mp;\n        for (int colStart = 0; colStart < n; colStart++) {\n            for (int colEnd = colStart; colEnd < n; colEnd++) {\n                int cursum = 0;\n                mp = {{0, 1}};\n                for(int row = 0; row < m; row++){\n                    cursum += A[row][colEnd] - (colStart ? A[row][colStart - 1] : 0);    \n                    res += mp[cursum - target];\n                    mp[cursum]++;\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target"}