{"id":479332526,"lang":"cpp","time":"1Â year, 1Â month","timestamp":1618154599,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/479332526/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepest = 0, sum = 0;\n    int deepestLeavesSum(TreeNode* root, int depth = 0) {\n        if(!root) return 0; \n        if(!root -> left && !root -> right) \n            if(depth == deepest) sum += root -> val; \n            else if(depth > deepest) sum = root -> val, deepest = depth; \n        deepestLeavesSum(root -> left, depth + 1);   \n        deepestLeavesSum(root -> right, depth + 1);  \n        return sum; \n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}