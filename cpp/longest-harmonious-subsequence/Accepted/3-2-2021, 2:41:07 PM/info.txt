{"id":462509211,"lang":"cpp","time":"1 year, 3 months","timestamp":1614676267,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/462509211/","is_pending":"Not Pending","title":"Longest Harmonious Subsequence","memory":"51.1 MB","code":"class Solution {\npublic:\n    int findLHS(vector<int>& nums) {\n        int n = nums.size();\n        map<int, int > mp; \n        map<int, int > diff_mp; \n        for (int i = 0; i < n; i++) \n            mp[nums[i]]++; \n\n        map<int, int >::iterator itr;\n        for (itr = mp.begin(); itr!= mp.end(); itr++) {\n            diff_mp[itr->first] = 0;\n            cout<< itr->first << \" \" << itr->second << \" \"<< diff_mp[itr->first]<< \"\\n\";\n        }\n        for (itr = mp.begin(); (next(itr, 1))!= mp.end(); itr++) {\n            // cout << itr->first << \" \" << itr->second << endl; \n            \n            \n            cout<< ((next(itr, 1)->first) - (itr->first) == 1) ;\n                \n            \n            // (next(itr, 1)->first) << \" \"<< (itr->first) << \" \" << \"expression \"<< (next(itr, 1)->first) - (itr->first) == 1  << \"\\n\";\n            diff_mp[itr->first] = ( (next(itr, 1)->first) - (itr->first) == 1 ) ? ((next(itr, 1)->second) + (itr->second) ) : 0;\n        }\n        cout << \"\\n\";\n        for(itr= diff_mp.begin(); itr!=diff_mp.end(); itr++){\n            cout<< itr->first << \" \" << itr->second << \" \";\n        }\n        int max = 0;\n        for(itr= diff_mp.begin(); itr!=diff_mp.end(); itr++){\n            if(itr->second > max ) max = itr->second;\n            // cout<< itr->first << \" \" << itr->second << \" \";\n        }\n        cout<< \"max is \"<< max;\n        return max;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-harmonious-subsequence"}