{"id":478485993,"lang":"cpp","time":"1 year, 2 months","timestamp":1617965884,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/478485993/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.5 MB","code":"class Solution {\npublic:\n    unordered_map<char, int> mp;\n    bool isAlienSorted(vector<string>& words, string order) {        \n        for(int i = 0; i < size(order); i++) mp[order[i]] = i;  // mapping letter to its corresponding index in order\n        for(int i = 0; i < size(words) - 1; i++)\n            if(!checkOrder(words[i], words[i + 1])) return false;\n        return true;        \n    }    \n    // checking if two words are lexicographically sorted\n    bool checkOrder(string& a, string& b){\n        int i = -1;\n        while(++i < size(a) && i < size(b))\n            if(mp[a[i]] != mp[b[i]]) return mp[a[i]] < mp[b[i]];\n        return size(a) <= size(b);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary"}