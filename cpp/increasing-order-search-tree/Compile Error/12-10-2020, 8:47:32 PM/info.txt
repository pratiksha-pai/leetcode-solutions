{"id":429246144,"lang":"cpp","time":"1 year, 6 months","timestamp":1607613452,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/429246144/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* increasingBST(TreeNode* root) {\n        // if(root == NULL) return root;\n        if(root->left == NULL && root->right ==NULL) return root;\n        else if(root->left == NULL && root->right != NULL) {\n            root->right = increasingBST(root->right);\n            return root;\n        } \n        else if(root->right ==NULL && root->left != NULL) {\n            increasingBST(root->left)->right = root;\n            root->left = NULL;\n            return root;\n        }\n        else{\n            root->right = increasingBST(root->right);\n            TreeNode* temp = root->left;\n            root->left = NULL;\n            increasingBST(temp)->right = root;\n        }\n        \n    }\n};","compare_result":null,"title_slug":"increasing-order-search-tree"}