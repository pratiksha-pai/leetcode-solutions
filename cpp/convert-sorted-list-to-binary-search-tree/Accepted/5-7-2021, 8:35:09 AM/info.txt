{"id":489863116,"lang":"cpp","time":"1 year, 1 month","timestamp":1620356709,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/489863116/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"31 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* sortedListToBST(ListNode* head) {\n        return ToBST(head,NULL);\n    }\n    TreeNode* ToBST(ListNode* head, ListNode* tail){\n        if(head==tail)\n            return NULL;\n        ListNode* fast=head;\n        ListNode* slow=head;\n        while(fast != tail &&fast->next != tail){\n            slow=slow->next;\n            fast=fast->next->next;\n        }\n        TreeNode* root=new TreeNode(slow->val);\n        root->left=ToBST(head,slow);\n        root->right=ToBST(slow->next,tail);\n        return root;\n    }\n    \n    \n//     TreeNode* util(ListNode **head, int n){        \n//         if(n<=0 || *head == NULL) return NULL;\n//         TreeNode* left = util(head, n/2);\n//         TreeNode* root = new TreeNode();\n//         // if(*head == NULL) return NULL;\n//         root->val = (*head)->val;\n//         root->left=left;\n//         *head = (*head)->next;\n//         TreeNode* right = util(head, n-n/2);\n//         root->right=right;\n//         return root;\n        \n//     }\n//     TreeNode* sortedListToBST(ListNode* head) {\n//         if(head==NULL) return NULL;\n//         int n=0;\n//         ListNode* temp = head;\n//         while(temp){\n//             n++;\n//             temp=temp->next;\n//         }\n//         cout<<\"n is \"<<n<<endl;\n//         TreeNode* root = util(&head, n);\n//         return root;\n//         return NULL;\n//     }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}