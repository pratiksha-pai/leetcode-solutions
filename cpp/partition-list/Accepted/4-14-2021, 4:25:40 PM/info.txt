{"id":480514433,"lang":"cpp","time":"1 year, 1 month","timestamp":1618397740,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/480514433/","is_pending":"Not Pending","title":"Partition List","memory":"10.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        \n        ListNode* smaller=new ListNode(-1);\n        ListNode* smaller_head=smaller; \n        ListNode* greater=new ListNode(-1);\n        ListNode* greater_head=greater;\n        \n        \n        ListNode* curr=head;\n        ListNode* next=head;\n        \n        \n        while(curr){\n            if(curr->val<x) smaller->next=curr, smaller=smaller->next;\n            else greater->next=curr, greater=greater->next;\n            curr=curr->next;\n        }\n        \n        \n        if(smaller)smaller->next=greater_head->next;\n        if(greater)greater->next=NULL;\n        \n        \n        return smaller_head->next;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list"}