{"id":474778014,"lang":"cpp","time":"1 year, 2 months","timestamp":1617213616,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/474778014/","is_pending":"Not Pending","title":"Stamping The Sequence","memory":"7.6 MB","code":"class Solution {\npublic:\nint stars, n, m;\nvector<int> ans;     \nvector<int> movesToStamp(string stamp, string target) {\n\tstars = 0, n = size(target), m = size(stamp);        \n\tvector<bool> vis(n, false);  // to avoid revisiting index at which replacement already occurred\n\twhile(stars < n){            // till all characters have not been stamped\n\t\tbool replaced = false;\n\t\tfor(int i = 0; i <= n - m && stars < n; i++)\n\t\t\t// for each non-visited index, check if there's a match with 'stamp' for target substring starting at i\n\t\t\t// replace and increment the stars count if there's a match (partial or complete)\n\t\t\tif(!vis[i]) replaced = checkAndReplace(target, i, stamp), vis[i] = replaced;\n\t\tif(!replaced) return {}; // if no replacement occurs throughout one iteration over target, return []\n\t}            \n\t// we began with reverse appraoch, real sequence will be reverse of what we got\n\treverse(begin(ans), end(ans));\n\treturn ans;\n}\nbool checkAndReplace(string& target, int& start, string& stamp){\n\t// check for match\n\tfor(int i = 0; i < m; i++)\n\t\tif(target[i + start] != '*' && target[i + start] != stamp[i]) return false;\n\t// match occurs - push index into ans and replace start to start+m\twith *\n\tans.push_back(start);\n\tfor(int i = start; i - start < m; i++) \t\n\t\tstars += (target[i] != '*'), target[i] = '*';        \n\t\t// dont count ⬆️ if it was already star character\n\treturn true; // denotes replacement happened at index start to start + m\n}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"stamping-the-sequence"}